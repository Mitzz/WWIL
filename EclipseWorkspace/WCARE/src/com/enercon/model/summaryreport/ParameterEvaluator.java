package com.enercon.model.summaryreport;

import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.enercon.dao.WecDataDao;
import com.enercon.dao.master.StateMasterDao;
import com.enercon.dao.master.WecMasterDao;
import com.enercon.global.utility.DateUtility;
import com.enercon.model.master.AreaMasterVo;
import com.enercon.model.master.CustomerMasterVo;
import com.enercon.model.master.EbMasterVo;
import com.enercon.model.master.SiteMasterVo;
import com.enercon.model.master.StateMasterVo;
import com.enercon.model.master.WecsPresent;
import com.enercon.model.report.IWecParameterVo;
import com.enercon.model.thread.map.DayWecParameterVoEvaluator;
import com.enercon.model.thread.map.DayWecParameterVoWecWiseEvaluator;
import com.enercon.model.thread.map.FiscalYearWecParameterVoEvaluator;
import com.enercon.model.thread.map.ManyWecsMonthWiseYearlyGeneration;
import com.enercon.model.thread.map.ManyWecsMonthWiseYearlyMA;
import com.enercon.model.thread.map.ManyWecsMonthWiseYearlyOpHr;
import com.enercon.model.thread.map.MapKeyValueMapper;
import com.enercon.model.thread.map.MapValueEvaluatorWorker;
import com.enercon.model.thread.map.PeriodWecParameterVoEvaluator;
import com.enercon.model.thread.map.PeriodWecParameterVoWecWiseEvaluator;
import com.enercon.model.thread.map.YearMonthWiseWecParameterVoEvaluator;

public class ParameterEvaluator {

	private Map<Year, Map<Month, Integer>> getYearWiseMonthlyParameter(String fromDate, String toDate, Set<String> wecIds, Parameter parameter) throws ParseException {
		Map<String, String> years = null;
		years = DateUtility.getYearWisePeriod(fromDate, toDate);
		
		MapKeyValueMapper<Year, Map<Month, Integer>> m = null;
		List<MapValueEvaluatorWorker<Year,Map<Month , Integer>>> workerList = null;
		String endingDate = null;
		
		m = new MapKeyValueMapper<Year, Map<Month, Integer>>();
		workerList = new ArrayList<MapValueEvaluatorWorker<Year,Map<Month , Integer>>>();
		
		for(String startingDate : years.keySet()){
			endingDate = years.get(startingDate);
			
			switch (parameter) {
			case GENERATION : workerList.add(new ManyWecsMonthWiseYearlyGeneration<Year, Map<Month , Integer>>(Year.valueOf(DateUtility.gettingYearFromStringDate(startingDate)) , startingDate, endingDate, wecIds));break;
			case OPERATING_HOUR : workerList.add(new ManyWecsMonthWiseYearlyOpHr<Year, Map<Month , Integer>>(Year.valueOf(DateUtility.gettingYearFromStringDate(startingDate)) , startingDate, endingDate, wecIds));break;
			case MA : workerList.add(new ManyWecsMonthWiseYearlyMA<Year, Map<Month , Double>>(Year.valueOf(DateUtility.gettingYearFromStringDate(startingDate)) , startingDate, endingDate, wecIds));break;
			default: break;
			}
		}
		
		return m.submit(workerList);
	}
	
	public Map<Year, Map<Month, Integer>> getYearWiseMonthlyGeneration(String fromDate, String toDate, Set<String> wecIds) throws ParseException {
		return getYearWiseMonthlyParameter(fromDate, toDate, wecIds, Parameter.GENERATION);
	}

	public Map<Year, Map<Month, Integer>> getYearWiseMonthlyOperatingHour(String fromDate, String toDate, Set<String> wecIds) throws ParseException {
		return getYearWiseMonthlyParameter(fromDate, toDate, wecIds, Parameter.OPERATING_HOUR);
	}
	
	public Map<Year, Map<Month, Integer>> getYearWiseMonthlyMA(String fromDate, String toDate, Set<String> wecIds) throws ParseException {
		return getYearWiseMonthlyParameter(fromDate, toDate, wecIds, Parameter.MA);
	}

	public Map<Year, Map<Month, IWecParameterVo>> getYearWiseMonthlyWecParameterVo(String fromDate, String toDate, Set<String> wecIds, Set<Parameter> parameters) throws ParseException {
		
		Map<String, String> yearWisePeriod = null;
		yearWisePeriod = DateUtility.getYearWisePeriod(fromDate, toDate);
		
		MapKeyValueMapper<Year, Map<Month, IWecParameterVo>> mapper = null;
		List<MapValueEvaluatorWorker<Year,Map<Month , IWecParameterVo>>> yearWiseMonthlyWecParameterVoWorkers = null;
		String endingDate = null;
		
		mapper = new MapKeyValueMapper<Year, Map<Month, IWecParameterVo>>();
		yearWiseMonthlyWecParameterVoWorkers = new ArrayList<MapValueEvaluatorWorker<Year,Map<Month , IWecParameterVo>>>();
		
		for(String startingDate : yearWisePeriod.keySet()){
			endingDate = yearWisePeriod.get(startingDate);
			yearWiseMonthlyWecParameterVoWorkers.add(new YearMonthWiseWecParameterVoEvaluator<Year, Map<Month, IWecParameterVo>>(Year.valueOf(DateUtility.gettingYearFromStringDate(startingDate)) , startingDate, endingDate, wecIds, parameters));
		}
		
		return mapper.submit(yearWiseMonthlyWecParameterVoWorkers);
	}
	
	public Map<Year, IWecParameterVo> getYearWiseWecParameterVo(String fromDate, String toDate, Set<String> wecIds, Set<Parameter> parameters) throws ParseException {
		System.out.println("TODO: Implement 'Year-wise' data processing");
		return null;
	}
	
	public Map<FiscalYear, IWecParameterVo> getFiscalYearWiseWecParameterVo(String fromDate, String toDate, Set<String> wecIds, Set<Parameter> parameters) throws ParseException {
		
		Map<String, String> fiscalYears = null;
		fiscalYears = DateUtility.getPeriodFiscalYearWise(fromDate, toDate);
		
		MapKeyValueMapper<FiscalYear, IWecParameterVo> m = null;
		List<MapValueEvaluatorWorker<FiscalYear, IWecParameterVo>> workerList = null;
		String endingDate = null;
		
		m = new MapKeyValueMapper<FiscalYear, IWecParameterVo>();
		workerList = new ArrayList<MapValueEvaluatorWorker<FiscalYear, IWecParameterVo>>();
		
		for(String startingDate : fiscalYears.keySet()){
			endingDate = fiscalYears.get(startingDate);
			
			if(DateUtility.isFirstDateOfTheFiscalYear(startingDate) && DateUtility.isLastDateOfTheFiscalYear(endingDate)){
				workerList.add(new FiscalYearWecParameterVoEvaluator<FiscalYear, IWecParameterVo>(FiscalYear.valueOf(DateUtility.getFiscalYear(startingDate)), wecIds, parameters));
			} else {
				workerList.add(new FiscalYearWecParameterVoEvaluator<FiscalYear, IWecParameterVo>(FiscalYear.valueOf(DateUtility.getFiscalYear(startingDate)), wecIds, startingDate, endingDate, parameters));
			}
		}
		
		return m.submit(workerList);
	}
	
	public Map<String, IWecParameterVo> getStateWiseWecParameterVo(String date, Set<String> allWecIds, Set<Parameter> parameters) throws SQLException {
		Map<String, Set<String>> stateWiseWecIds = WecMasterDao.getWecIdsStatewise(allWecIds);
		
		MapKeyValueMapper<String, IWecParameterVo> m = null;
		List<MapValueEvaluatorWorker<String, IWecParameterVo>> workerList = null;
		m = new MapKeyValueMapper<String, IWecParameterVo>();
		workerList = new ArrayList<MapValueEvaluatorWorker<String, IWecParameterVo>>();
		
		for (String stateId : stateWiseWecIds.keySet()) {
			workerList.add(new DayWecParameterVoEvaluator<String, IWecParameterVo>(StateMasterDao.getStateNameBasedOnStateId(stateId) , stateWiseWecIds.get(stateId), date, parameters));
		}
		
		return m.submit(workerList);
	}
	
	public Map<StateMasterVo, IWecParameterVo> getStateWiseWecParameterVo(List<StateMasterVo> states, String date, List<Parameter> parameters){
		return get(states, date, parameters);
	}
	
	public Map<AreaMasterVo, IWecParameterVo> getAreaWiseWecParameterVo(List<AreaMasterVo> areas, String date, List<Parameter> parameters){
		return get(areas, date, parameters);
	}
	
	public Map<SiteMasterVo, IWecParameterVo> getSiteWiseWecParameterVo(List<SiteMasterVo> sites, String date, List<Parameter> parameters){
		return get(sites, date, parameters);
	}
	
	public Map<EbMasterVo, IWecParameterVo> getEbWiseWecParameterVo(List<EbMasterVo> ebs, String date, List<Parameter> parameters){
		return get(ebs, date, parameters);
	}
	
	public Map<CustomerMasterVo, IWecParameterVo> getCustomerWiseWecParameterVo(List<CustomerMasterVo> customers, String date, List<Parameter> parameters){
		return get(customers, date, parameters);
	}
	
	public <Master extends WecsPresent> Map<Master, IWecParameterVo> get(List<Master> keys, String date, List<Parameter> parameters){
		MapKeyValueMapper<Master, IWecParameterVo> mapper = new MapKeyValueMapper<Master, IWecParameterVo>();
		List<MapValueEvaluatorWorker<Master, IWecParameterVo>> workers = new ArrayList<MapValueEvaluatorWorker<Master, IWecParameterVo>>();
		
		for (Master key : keys) {
			workers.add(new DayWecParameterVoEvaluator<Master, IWecParameterVo>(key , key.getWecs(), date, parameters));
		} 
		
		return mapper.submit(workers);
	}
	
	public Map<String, IWecParameterVo> getStateWiseWecParameterVo(String fromDate, String toDate, Set<String> allWecIds, Set<Parameter> parameters) throws SQLException {
		
		Map<String, Set<String>> stateWiseWecIds = WecMasterDao.getWecIdsStatewise(allWecIds);
		
		MapKeyValueMapper<String, IWecParameterVo> m = null;
		List<MapValueEvaluatorWorker<String, IWecParameterVo>> workerList = null;
		m = new MapKeyValueMapper<String, IWecParameterVo>();
		workerList = new ArrayList<MapValueEvaluatorWorker<String, IWecParameterVo>>();
		
		for (String stateId : stateWiseWecIds.keySet()) {
			workerList.add(new PeriodWecParameterVoEvaluator<String, IWecParameterVo>(StateMasterDao.getStateNameBasedOnStateId(stateId), stateWiseWecIds.get(stateId), fromDate, toDate, parameters));
		}
		Map<String, IWecParameterVo> stateWiseWecParameterVo = m.submit(workerList);
		
		return stateWiseWecParameterVo;
	}
	
	public Map<String, IWecParameterVo> getWecWiseWecParameterVo(String date, Set<String> allWecIds, Set<Parameter> parameters) throws SQLException, ParseException {
		DayWecParameterVoWecWiseEvaluator<String, Map<String,IWecParameterVo>> sd = new DayWecParameterVoWecWiseEvaluator<String, Map<String,IWecParameterVo>>(allWecIds, date, parameters);
		return sd.evaluate();
	}
	
	public Map<String, IWecParameterVo> getWecWiseWecParameterVo(String fromDate, String toDate, Set<String> allWecIds, Set<Parameter> parameters) throws SQLException, ParseException {
		PeriodWecParameterVoWecWiseEvaluator<String, Map<String,IWecParameterVo>> sd = new PeriodWecParameterVoWecWiseEvaluator<String, Map<String,IWecParameterVo>>(allWecIds, fromDate, toDate, parameters);
		return sd.evaluate();
	}
	
	public static void main(String[] args) {
		Set<String> wecIds = new HashSet<String>();
		wecIds.add("1010000124");
		wecIds.add("1010000126");
		wecIds.add("1010000127");
		wecIds.add("1010000015");
		wecIds.add("1009000006");
		wecIds.add("1109000004");
		wecIds.add("1109000005");
		wecIds.add("1010000125");
		wecIds.add("1109000069");
		wecIds.add("1109000070");
		wecIds.add("1109000074");
		wecIds.add("1109000079");
		wecIds.add("1109000034");
		wecIds.add("1109000035");
		wecIds.add("1109000068");
		wecIds.add("1109000071");
		wecIds.add("1109000072");
		wecIds.add("1109000075");
		wecIds.add("1202000047");
		wecIds.add("1202000045");
		wecIds.add("1202000046");
		wecIds.add("1202000043");
		wecIds.add("1202000044");
		wecIds.add("1204000122");
		wecIds.add("1204000123");
		wecIds.add("1204000124");
		wecIds.add("1204000125");
		wecIds.add("1204000126");
		wecIds.add("1204000127");
		wecIds.add("1204000128");
		wecIds.add("1204000129");
		wecIds.add("1204000131");
		wecIds.add("1204000139");
		wecIds.add("1204000140");
		wecIds.add("1204000141");
		wecIds.add("1204000142");
		wecIds.add("1204000143");
		wecIds.add("1204000147");
		wecIds.add("1204000150");
		wecIds.add("1204000151");
		wecIds.add("1204000152");
		wecIds.add("1204000153");
		wecIds.add("1204000154");
		wecIds.add("1204000155");
		wecIds.add("1204000156");
		wecIds.add("1204000157");
		wecIds.add("1204000158");
		wecIds.add("1204000159");
		wecIds.add("1204000160");
		wecIds.add("1204000161");
		wecIds.add("1204000162");
		wecIds.add("1204000163");
		wecIds.add("1204000164");
		wecIds.add("1204000165");
		wecIds.add("1204000166");
		wecIds.add("1204000167");
		wecIds.add("1204000168");
		wecIds.add("1204000169");
		wecIds.add("1204000170");
		wecIds.add("1204000171");
		wecIds.add("1204000174");
		wecIds.add("1204000175");
		wecIds.add("1204000176");
		wecIds.add("1205000001");
		wecIds.add("1205000002");
		wecIds.add("1205000003");
		wecIds.add("1205000004");
		wecIds.add("1204000148");
		wecIds.add("1205000006");
		wecIds.add("1205000009");
		wecIds.add("1205000010");
		wecIds.add("1205000011");
		wecIds.add("1205000014");
		wecIds.add("1205000017");
		wecIds.add("1205000019");
		wecIds.add("1205000020");
		wecIds.add("1205000023");
		wecIds.add("1205000024");
		wecIds.add("1205000025");
		wecIds.add("1205000026");
		wecIds.add("1205000027");
		wecIds.add("1205000029");
		wecIds.add("1205000030");
		wecIds.add("1205000031");
		wecIds.add("1205000032");
		wecIds.add("1205000034");
		wecIds.add("1205000037");
		wecIds.add("1205000038");
		wecIds.add("1205000039");
		wecIds.add("1205000040");
		wecIds.add("1205000041");
		wecIds.add("1205000042");
		wecIds.add("1206000001");
		wecIds.add("1206000003");
		wecIds.add("1206000004");
		wecIds.add("1206000005");
		wecIds.add("1206000006");
		wecIds.add("1206000007");
		wecIds.add("1206000009");
		wecIds.add("1206000014");
		wecIds.add("1206000015");
		wecIds.add("1206000016");
		wecIds.add("1206000017");
		wecIds.add("1206000018");
		wecIds.add("1206000019");
		wecIds.add("1206000020");
		wecIds.add("1206000022");
		wecIds.add("1204000130");
		wecIds.add("1204000132");
		wecIds.add("1204000133");
		wecIds.add("1204000134");
		wecIds.add("1204000135");
		wecIds.add("1204000136");
		wecIds.add("1204000137");
		wecIds.add("1204000138");
		wecIds.add("1204000144");
		wecIds.add("1204000145");
		wecIds.add("1204000146");
		wecIds.add("1204000149");
		wecIds.add("1204000172");
		wecIds.add("1204000173");
		wecIds.add("1205000005");
		wecIds.add("1205000007");
		wecIds.add("1205000008");
		wecIds.add("1205000012");
		wecIds.add("1205000013");
		wecIds.add("1205000021");
		wecIds.add("1205000028");
		wecIds.add("1205000033");
		wecIds.add("1206000002");
		wecIds.add("1206000008");
		wecIds.add("1206000010");
		wecIds.add("1206000011");
		wecIds.add("1206000012");
		wecIds.add("1206000013");
		wecIds.add("1206000021");
		wecIds.add("1206000023");
		wecIds.add("1206000024");
		wecIds.add("1206000025");
		wecIds.add("1207000085");
		wecIds.add("1207000087");
		wecIds.add("1207000093");
		wecIds.add("1207000099");
		wecIds.add("1207000112");
		wecIds.add("1207000113");
		wecIds.add("1207000115");
		wecIds.add("1207000117");
		wecIds.add("1206000029");
		wecIds.add("1206000032");
		wecIds.add("1206000034");
		wecIds.add("1207000001");
		wecIds.add("1207000005");
		wecIds.add("1207000006");
		wecIds.add("1207000017");
		wecIds.add("1207000019");
		wecIds.add("1207000020");
		wecIds.add("1207000022");
		wecIds.add("1207000029");
		wecIds.add("1207000034");
		wecIds.add("1207000035");
		wecIds.add("1207000042");
		wecIds.add("1207000046");
		wecIds.add("1207000049");
		wecIds.add("1207000084");
		wecIds.add("1207000090");
		wecIds.add("1207000096");
		wecIds.add("1207000098");
		wecIds.add("1207000101");
		wecIds.add("1207000102");
		wecIds.add("1207000108");
		wecIds.add("1207000156");
		wecIds.add("1207000170");
		wecIds.add("1207000174");
		wecIds.add("1207000175");
		wecIds.add("1207000011");
		wecIds.add("1207000012");
		wecIds.add("1207000013");
		wecIds.add("1207000014");
		wecIds.add("1207000015");
		wecIds.add("1207000016");
		wecIds.add("1207000018");
		wecIds.add("1207000023");
		wecIds.add("1207000024");
		wecIds.add("1207000027");
		wecIds.add("1207000030");
		wecIds.add("1207000031");
		wecIds.add("1207000032");
		wecIds.add("1207000033");
		wecIds.add("1207000039");
		wecIds.add("1207000092");
		wecIds.add("1207000095");
		wecIds.add("1207000159");
		wecIds.add("1207000160");
		wecIds.add("1207000161");
		wecIds.add("1207000176");
		wecIds.add("1207000177");
		wecIds.add("1206000026");
		wecIds.add("1206000035");
		wecIds.add("1206000036");
		wecIds.add("1207000008");
		wecIds.add("1207000036");
		wecIds.add("1207000041");
		wecIds.add("1207000043");
		wecIds.add("1207000044");
		wecIds.add("1207000045");
		wecIds.add("1207000047");
		wecIds.add("1207000048");
		wecIds.add("1207000050");
		wecIds.add("1207000051");
		wecIds.add("1207000052");
		wecIds.add("1207000053");
		wecIds.add("1207000054");
		wecIds.add("1207000091");
		wecIds.add("1207000097");
		wecIds.add("1207000100");
		wecIds.add("1207000103");
		wecIds.add("1207000105");
		wecIds.add("1207000110");
		wecIds.add("1207000118");
		wecIds.add("1207000119");
		wecIds.add("1207000157");
		wecIds.add("1207000158");
		wecIds.add("1206000027");
		wecIds.add("1206000028");
		wecIds.add("1206000030");
		wecIds.add("1206000031");
		wecIds.add("1206000033");
		wecIds.add("1207000010");
		wecIds.add("1207000037");
		wecIds.add("1207000038");
		wecIds.add("1207000040");
		wecIds.add("1106000055");
		wecIds.add("1106000056");
		wecIds.add("1106000057");
		wecIds.add("1009000004");
		wecIds.add("1009000005");
		wecIds.add("1009000007");
		wecIds.add("1009000008");
		wecIds.add("1009000009");
		wecIds.add("1009000010");
		wecIds.add("1009000011");
		wecIds.add("1009000012");
		wecIds.add("1009000013");
		wecIds.add("1009000014");
		wecIds.add("1010000120");
		wecIds.add("1106000058");
		wecIds.add("1109000001");
		wecIds.add("1009000015");
		wecIds.add("1010000001");
		wecIds.add("1010000002");
		wecIds.add("1010000003");
		wecIds.add("1010000004");
		wecIds.add("1010000005");
		wecIds.add("1010000006");
		wecIds.add("1010000007");
		wecIds.add("1010000008");
		wecIds.add("1010000041");
		wecIds.add("1010000042");
		wecIds.add("1010000043");
		wecIds.add("1109000006");
		wecIds.add("1110000118");
		wecIds.add("1111000009");
		wecIds.add("1111000012");
		wecIds.add("1111000013");
		wecIds.add("1010000010");
		wecIds.add("1010000011");
		wecIds.add("1010000016");
		wecIds.add("1010000017");
		wecIds.add("1010000019");
		wecIds.add("1010000023");
		wecIds.add("1010000024");
		wecIds.add("1010000026");
		wecIds.add("1010000028");
		wecIds.add("1010000031");
		wecIds.add("1010000032");
		wecIds.add("1010000038");
		wecIds.add("1010000113");
		wecIds.add("1010000114");
		wecIds.add("1010000115");
		wecIds.add("1010000116");
		wecIds.add("1010000117");
		wecIds.add("1010000118");
		wecIds.add("1010000119");
		wecIds.add("1110000110");
		wecIds.add("1110000111");
		wecIds.add("1111000010");
		wecIds.add("1111000011");
		wecIds.add("1010000009");
		wecIds.add("1010000012");
		wecIds.add("1010000018");
		wecIds.add("1010000020");
		wecIds.add("1010000021");
		wecIds.add("1010000025");
		wecIds.add("1106000047");
		wecIds.add("1106000048");
		wecIds.add("1106000049");
		wecIds.add("1106000050");
		wecIds.add("1106000051");
		wecIds.add("1106000052");
		wecIds.add("1106000053");
		wecIds.add("1109000002");
		wecIds.add("1109000032");
		wecIds.add("1109000036");
		wecIds.add("1010000039");
		wecIds.add("1010000040");
		wecIds.add("1010000121");
		wecIds.add("1010000122");
		wecIds.add("1010000123");
		wecIds.add("1106000041");
		wecIds.add("1106000042");
		wecIds.add("1106000043");
		wecIds.add("1106000044");
		wecIds.add("1106000045");
		wecIds.add("1106000046");
		wecIds.add("1111000027");
		wecIds.add("1010000030");
		wecIds.add("1010000014");
		wecIds.add("1111000042");
		wecIds.add("1111000043");
		wecIds.add("1201000011");
		wecIds.add("1201000012");
		wecIds.add("1107000014");
		wecIds.add("1106000054");
		wecIds.add("1201000034");
		wecIds.add("1201000035");
		wecIds.add("1201000036");
		wecIds.add("1201000037");
		wecIds.add("1201000038");
		wecIds.add("1202000002");
		wecIds.add("1202000003");
		wecIds.add("1202000004");
		wecIds.add("1202000005");
		wecIds.add("1202000006");
		wecIds.add("1202000007");
		wecIds.add("1109000033");
		wecIds.add("1109000073");
		wecIds.add("1109000076");
		wecIds.add("1109000077");
		wecIds.add("1109000078");
		wecIds.add("1111000026");
		wecIds.add("1010000013");
		wecIds.add("1109000003");
		wecIds.add("1010000027");
		wecIds.add("1110000106");
		wecIds.add("1110000112");
		wecIds.add("1110000113");
		wecIds.add("1110000114");
		wecIds.add("1110000115");
		wecIds.add("1110000117");
		wecIds.add("1307000006");
		wecIds.add("1307000007");
		wecIds.add("1309000005");
		wecIds.add("1309000007");
		wecIds.add("1309000008");
		wecIds.add("1310000002");
		wecIds.add("1310000003");
		wecIds.add("1307000008");
		wecIds.add("1307000009");
		wecIds.add("1307000010");
		wecIds.add("1307000011");
		wecIds.add("1307000012");
		wecIds.add("1307000013");
		wecIds.add("1309000004");
		wecIds.add("1309000006");
		wecIds.add("1310000005");
		wecIds.add("1311000024");
		wecIds.add("1412000006");
		wecIds.add("1412000017");
		wecIds.add("1412000018");
		wecIds.add("1503000010");
		wecIds.add("1312000034");
		wecIds.add("1404000004");
		wecIds.add("1404000039");
		wecIds.add("1407000019");
		wecIds.add("1408000075");
		wecIds.add("1412000013");
		wecIds.add("1502000003");
		wecIds.add("1503000008");
		wecIds.add("1311000019");
		wecIds.add("1406000019");
		wecIds.add("1408000013");
		wecIds.add("1408000014");
		wecIds.add("1412000004");
		wecIds.add("1412000005");
		wecIds.add("1503000009");
		wecIds.add("1306000002");
		wecIds.add("1306000003");
		wecIds.add("1306000004");
		wecIds.add("1306000005");
		wecIds.add("1403000030");
		wecIds.add("1404000008");
		wecIds.add("1408000074");
		wecIds.add("1410000009");
		wecIds.add("1412000014");
		wecIds.add("1502000005");
		wecIds.add("1311000017");
		wecIds.add("1312000004");
		wecIds.add("1403000035");
		wecIds.add("1404000009");
		wecIds.add("1408000022");
		wecIds.add("1408000023");
		wecIds.add("1412000003");
		wecIds.add("1412000015");
		wecIds.add("1412000016");
		wecIds.add("1311000015");
		wecIds.add("1311000016");
		wecIds.add("1402000032");
		wecIds.add("1403000028");
		wecIds.add("1403000029");
		wecIds.add("1408000010");
		wecIds.add("1408000011");
		wecIds.add("1502000006");
		wecIds.add("1209000005");
		wecIds.add("1311000014");
		wecIds.add("1311000023");
		wecIds.add("1312000002");
		wecIds.add("1312000005");
		wecIds.add("1312000011");
		wecIds.add("1312000031");
		wecIds.add("1312000033");
		wecIds.add("1401000002");
		wecIds.add("1401000003");
		wecIds.add("1401000007");
		wecIds.add("1401000009");
		wecIds.add("1401000017");
		wecIds.add("1401000020");
		wecIds.add("1402000001");
		wecIds.add("1402000009");
		wecIds.add("1402000016");
		wecIds.add("1402000025");
		wecIds.add("1402000026");
		wecIds.add("1403000009");
		wecIds.add("1403000012");
		wecIds.add("1403000021");
		wecIds.add("1403000023");
		wecIds.add("1312000017");
		wecIds.add("1312000037");
		wecIds.add("1408000073");
		wecIds.add("1507000008");
		wecIds.add("1312000039");
		wecIds.add("1402000033");
		wecIds.add("1402000034");
		wecIds.add("1402000036");
		wecIds.add("1403000010");
		wecIds.add("1404000013");
		wecIds.add("1404000015");
		wecIds.add("1404000016");
		wecIds.add("1408000029");
		wecIds.add("1408000043");
		wecIds.add("1408000044");
		wecIds.add("1410000018");
		wecIds.add("1412000019");
		wecIds.add("1501000001");
		wecIds.add("1507000009");
		wecIds.add("1507000010");
		wecIds.add("1507000011");
		wecIds.add("1311000026");
		wecIds.add("1311000027");
		wecIds.add("1312000006");
		wecIds.add("1401000004");
		wecIds.add("1405000006");
		wecIds.add("1408000070");
		wecIds.add("1312000012");
		wecIds.add("1312000013");
		wecIds.add("1403000006");
		wecIds.add("1403000007");
		wecIds.add("1403000024");
		wecIds.add("1403000034");
		wecIds.add("1404000003");
		wecIds.add("1404000014");
		wecIds.add("1404000018");
		wecIds.add("1404000022");
		wecIds.add("1404000030");
		wecIds.add("1404000038");
		wecIds.add("1404000040");
		wecIds.add("1404000045");
		wecIds.add("1404000058");
		wecIds.add("1404000059");
		wecIds.add("1404000060");
		wecIds.add("1404000063");
		wecIds.add("1406000003");
		wecIds.add("1312000040");
		wecIds.add("1312000041");
		wecIds.add("1404000031");
		wecIds.add("1404000032");
		wecIds.add("1404000033");
		wecIds.add("1408000021");
		wecIds.add("1408000071");
		wecIds.add("1408000072");
		wecIds.add("1311000028");
		wecIds.add("1402000037");
		wecIds.add("1408000047");
		wecIds.add("1408000049");
		wecIds.add("1408000069");
		wecIds.add("1311000029");
		wecIds.add("1311000031");
		wecIds.add("1312000014");
		wecIds.add("1312000015");
		wecIds.add("1312000016");
		wecIds.add("1312000038");
		wecIds.add("1404000002");
		wecIds.add("1408000015");
		wecIds.add("1408000016");
		wecIds.add("1408000050");
		wecIds.add("1408000067");
		wecIds.add("1409000003");
		wecIds.add("1411000008");
		wecIds.add("1411000009");
		wecIds.add("1411000010");
		wecIds.add("1311000030");
		wecIds.add("1403000027");
		wecIds.add("1404000011");
		wecIds.add("1404000034");
		wecIds.add("1407000010");
		wecIds.add("1407000012");
		wecIds.add("1407000018");
		wecIds.add("1407000020");
		wecIds.add("1408000030");
		wecIds.add("1408000031");
		wecIds.add("1408000032");
		wecIds.add("1408000033");
		wecIds.add("1408000034");
		wecIds.add("1408000037");
		wecIds.add("1408000040");
		wecIds.add("1408000041");
		wecIds.add("1408000042");
		wecIds.add("1408000045");
		wecIds.add("1408000046");
		wecIds.add("1408000048");
		wecIds.add("1408000052");
		wecIds.add("1408000054");
		wecIds.add("1408000060");
		wecIds.add("1408000064");
		wecIds.add("1408000065");
		wecIds.add("1408000076");
		wecIds.add("1409000004");
		wecIds.add("1409000008");
		wecIds.add("1410000007");
		wecIds.add("1410000008");
		wecIds.add("1410000010");
		wecIds.add("1404000017");
		wecIds.add("1404000061");
		wecIds.add("1404000062");
		wecIds.add("1408000012");
		wecIds.add("1410000015");
		wecIds.add("1501000003");
		wecIds.add("1404000035");
		wecIds.add("1404000036");
		wecIds.add("1408000051");
		wecIds.add("1409000005");
		wecIds.add("1501000004");
		wecIds.add("1207000055");
		wecIds.add("1207000086");
		wecIds.add("1207000089");
		wecIds.add("1207000094");
		wecIds.add("1209000002");
		wecIds.add("1210000037");
		wecIds.add("1210000038");
		wecIds.add("1207000004");
		wecIds.add("1207000007");
		wecIds.add("1207000009");
		wecIds.add("1207000088");
		wecIds.add("1207000104");
		wecIds.add("1207000106");
		wecIds.add("1207000109");
		wecIds.add("1408000068");
		wecIds.add("1410000019");
		wecIds.add("1411000001");
		wecIds.add("1411000006");
		wecIds.add("1411000007");
		wecIds.add("1411000011");
		wecIds.add("1411000012");
		wecIds.add("1411000013");
		wecIds.add("1412000011");
		wecIds.add("1412000020");
		wecIds.add("1412000022");
		wecIds.add("1412000024");
		wecIds.add("1412000029");
		wecIds.add("1412000033");
		wecIds.add("1501000002");
		wecIds.add("1501000005");
		wecIds.add("1501000006");
		wecIds.add("1501000008");
		wecIds.add("1502000004");
		wecIds.add("1502000007");
		wecIds.add("1505000003");
		wecIds.add("1506000004");
		wecIds.add("1506000008");
		wecIds.add("1312000007");
		wecIds.add("1401000005");
		wecIds.add("1410000020");
		wecIds.add("1411000005");
		wecIds.add("1402000027");
		wecIds.add("1402000028");
		wecIds.add("1404000020");
		wecIds.add("1404000021");
		wecIds.add("1406000018");
		wecIds.add("1407000021");
		wecIds.add("1411000004");
		wecIds.add("1412000001");
		wecIds.add("1412000021");
		wecIds.add("1412000023");
		wecIds.add("1207000111");
		wecIds.add("1209000004");
		wecIds.add("1210000025");
		wecIds.add("1207000002");
		wecIds.add("1207000003");
		wecIds.add("1207000114");
		wecIds.add("1207000116");
		wecIds.add("1403000033");
		wecIds.add("1404000019");
		wecIds.add("1404000024");
		wecIds.add("1404000027");
		wecIds.add("1410000006");
		wecIds.add("1404000023");
		wecIds.add("1408000009");
		wecIds.add("1409000006");
		wecIds.add("1409000007");
		wecIds.add("1410000021");
		wecIds.add("1412000025");
		wecIds.add("1501000007");
		wecIds.add("1209000003");
		wecIds.add("1210000026");
		wecIds.add("1210000029");
		wecIds.add("1210000060");
		wecIds.add("1210000061");
		wecIds.add("1210000062");
		wecIds.add("1210000063");
		wecIds.add("1207000107");
		wecIds.add("1209000001");
		wecIds.add("1312000008");
		wecIds.add("1401000006");
		wecIds.add("1401000018");
		wecIds.add("1404000025");
		wecIds.add("1404000064");
		wecIds.add("1404000065");
		wecIds.add("1407000022");
		wecIds.add("1408000053");
		wecIds.add("1412000026");
		wecIds.add("1412000035");
		wecIds.add("1412000036");
		wecIds.add("1412000037");
		wecIds.add("1402000008");
		wecIds.add("1404000026");
		wecIds.add("1404000046");
		wecIds.add("1408000024");
		wecIds.add("1408000025");
		wecIds.add("1312000009");
		wecIds.add("1402000029");
		wecIds.add("1404000028");
		wecIds.add("1407000013");
		wecIds.add("1407000014");
		wecIds.add("1407000023");
		wecIds.add("1408000055");
		wecIds.add("1408000056");
		wecIds.add("1412000002");
		wecIds.add("1302000007");
		wecIds.add("1304000017");
		wecIds.add("1304000019");
		wecIds.add("1304000021");
		wecIds.add("1304000028");
		wecIds.add("1210000028");
		wecIds.add("1210000030");
		wecIds.add("1210000035");
		wecIds.add("1210000036");
		wecIds.add("1210000039");
		wecIds.add("1210000049");
		wecIds.add("1311000020");
		wecIds.add("1311000022");
		wecIds.add("1401000019");
		wecIds.add("1402000030");
		wecIds.add("1402000039");
		wecIds.add("1404000047");
		wecIds.add("1408000036");
		wecIds.add("1408000061");
		wecIds.add("1412000034");
		wecIds.add("1312000010");
		wecIds.add("1403000025");
		wecIds.add("1404000029");
		wecIds.add("1405000005");
		wecIds.add("1408000026");
		wecIds.add("1408000035");
		wecIds.add("1408000059");
		wecIds.add("1408000062");
		wecIds.add("1410000016");
		wecIds.add("1402000031");
		wecIds.add("1402000035");
		wecIds.add("1408000001");
		wecIds.add("1408000057");
		wecIds.add("1408000063");
		wecIds.add("1412000032");
		wecIds.add("1210000031");
		wecIds.add("1210000032");
		wecIds.add("1210000033");
		wecIds.add("1210000034");
		wecIds.add("1210000040");
		wecIds.add("1210000041");
		wecIds.add("1212000002");
		wecIds.add("1212000006");
		wecIds.add("1301000023");
		wecIds.add("1304000001");
		wecIds.add("1304000004");
		wecIds.add("1304000013");
		wecIds.add("1304000027");
		wecIds.add("1312000001");
		wecIds.add("1403000026");
		wecIds.add("1404000041");
		wecIds.add("1408000066");
		wecIds.add("1412000031");
		wecIds.add("1403000036");
		wecIds.add("1404000005");
		wecIds.add("1404000042");
		wecIds.add("1404000050");
		wecIds.add("1407000015");
		wecIds.add("1408000002");
		wecIds.add("1408000003");
		wecIds.add("1408000005");
		wecIds.add("1408000058");
		wecIds.add("1412000030");
		wecIds.add("1408000004");
		wecIds.add("1408000006");
		wecIds.add("1408000007");
		wecIds.add("1408000008");
		wecIds.add("1503000003");
		wecIds.add("1508000010");
		wecIds.add("1210000050");
		wecIds.add("1210000051");
		wecIds.add("1210000052");
		wecIds.add("1210000053");
		wecIds.add("1211000030");
		wecIds.add("1211000031");
		wecIds.add("1212000001");
		wecIds.add("1212000003");
		wecIds.add("1212000004");
		wecIds.add("1212000005");
		wecIds.add("1402000010");
		wecIds.add("1312000003");
		wecIds.add("1402000011");
		wecIds.add("1402000012");
		wecIds.add("1404000006");
		wecIds.add("1408000039");
		wecIds.add("1311000018");
		wecIds.add("1311000021");
		wecIds.add("1403000005");
		wecIds.add("1404000012");
		wecIds.add("1407000016");
		wecIds.add("1412000027");
		wecIds.add("1304000002");
		wecIds.add("1304000003");
		wecIds.add("1304000005");
		wecIds.add("1304000007");
		wecIds.add("1304000008");
		wecIds.add("1304000009");
		wecIds.add("1304000031");
		wecIds.add("1304000035");
		wecIds.add("1304000036");
		wecIds.add("1304000037");
		wecIds.add("1408000017");
		wecIds.add("1408000018");
		wecIds.add("1408000019");
		wecIds.add("1408000020");
		wecIds.add("1410000011");
		wecIds.add("1312000030");
		wecIds.add("1402000013");
		wecIds.add("1402000014");
		wecIds.add("1403000016");
		wecIds.add("1403000017");
		wecIds.add("1408000038");
		wecIds.add("1412000028");
		wecIds.add("1412000038");
		wecIds.add("1402000015");
		wecIds.add("1403000037");
		wecIds.add("1403000038");
		wecIds.add("1404000007");
		wecIds.add("1505000002");
		wecIds.add("1304000103");
		wecIds.add("1304000104");
		wecIds.add("1304000105");
		wecIds.add("1305000005");
		wecIds.add("1305000015");
		wecIds.add("1305000016");
		wecIds.add("1305000019");
		wecIds.add("1305000022");
		wecIds.add("1210000027");
		wecIds.add("1304000006");
		wecIds.add("1304000010");
		wecIds.add("1304000014");
		wecIds.add("1304000018");
		wecIds.add("1304000026");
		wecIds.add("1311000013");
		wecIds.add("1312000032");
		wecIds.add("1403000008");
		wecIds.add("1403000018");
		wecIds.add("1406000010");
		wecIds.add("1403000015");
		wecIds.add("1410000017");
		wecIds.add("1412000010");
		wecIds.add("1402000017");
		wecIds.add("1304000100");
		wecIds.add("1305000001");
		wecIds.add("1305000002");
		wecIds.add("1305000003");
		wecIds.add("1305000004");
		wecIds.add("1305000011");
		wecIds.add("1305000012");
		wecIds.add("1305000013");
		wecIds.add("1305000014");
		wecIds.add("1310000001");
		wecIds.add("1310000004");
		wecIds.add("1304000042");
		wecIds.add("1304000043");
		wecIds.add("1304000045");
		wecIds.add("1304000050");
		wecIds.add("1304000051");
		wecIds.add("1402000038");
		wecIds.add("1403000013");
		wecIds.add("1403000032");
		wecIds.add("1404000043");
		wecIds.add("1406000001");
		wecIds.add("1406000002");
		wecIds.add("1406000004");
		wecIds.add("1312000035");
		wecIds.add("1402000018");
		wecIds.add("1402000019");
		wecIds.add("1402000020");
		wecIds.add("1404000010");
		wecIds.add("1502000002");
		wecIds.add("1503000004");
		wecIds.add("1508000011");
		wecIds.add("1401000015");
		wecIds.add("1403000019");
		wecIds.add("1403000020");
		wecIds.add("1403000022");
		wecIds.add("1407000011");
		wecIds.add("1304000038");
		wecIds.add("1304000039");
		wecIds.add("1304000040");
		wecIds.add("1304000041");
		wecIds.add("1304000044");
		wecIds.add("1304000046");
		wecIds.add("1304000052");
		wecIds.add("1304000106");
		wecIds.add("1305000006");
		wecIds.add("1304000011");
		wecIds.add("1304000012");
		wecIds.add("1304000015");
		wecIds.add("1304000016");
		wecIds.add("1304000020");
		wecIds.add("1304000022");
		wecIds.add("1304000023");
		wecIds.add("1304000024");
		wecIds.add("1304000025");
		wecIds.add("1304000029");
		wecIds.add("1304000030");
		wecIds.add("1404000037");
		wecIds.add("1406000011");
		wecIds.add("1407000017");
		wecIds.add("1503000005");
		wecIds.add("1312000036");
		wecIds.add("1404000001");
		wecIds.add("1405000002");
		wecIds.add("1405000003");
		wecIds.add("1408000027");
		wecIds.add("1412000009");
		wecIds.add("1502000001");
		wecIds.add("1503000006");
		wecIds.add("1403000014");
		wecIds.add("1406000012");
		wecIds.add("1406000013");
		wecIds.add("1406000016");
		wecIds.add("1406000017");
		wecIds.add("1412000008");
		wecIds.add("1412000012");
		wecIds.add("1505000004");
		wecIds.add("1508000012");
		wecIds.add("1304000101");
		wecIds.add("1304000102");
		wecIds.add("1305000007");
		wecIds.add("1305000008");
		wecIds.add("1305000009");
		wecIds.add("1305000010");
		wecIds.add("1305000017");
		wecIds.add("1305000018");
		wecIds.add("1305000020");
		wecIds.add("1305000021");
		wecIds.add("1404000044");
		wecIds.add("1406000005");
		wecIds.add("1408000028");
		wecIds.add("1412000007");
		wecIds.add("1503000007");
		wecIds.add("1311000025");
		wecIds.add("1401000008");
		wecIds.add("1401000016");
		wecIds.add("1404000066");
		wecIds.add("1404000068");
		wecIds.add("1406000014");
		wecIds.add("1406000015");
		Set<Parameter> parameters = new HashSet<Parameter>();
		parameters.add(Parameter.GENERATION);
//		parameters.add(Parameter.CF);
		parameters.add(Parameter.MA);
		parameters.add(Parameter.GA);
//		parameters.add(Parameter.REVENUE);
//		parameters.add(Parameter.LR_LOSS);
//		parameters.add(Parameter.FM_LOSS);
		try {
//			Set<String> customerIds = new HashSet<String>();
//	        
//	        customerIds.add("1009000010");
//			System.out.println(new ParameterEvaluator().getStateWiseWecParameterVo("01-APR-2015", "22-SEP-2015", wecIds, parameters));
			System.out.println(new WecDataDao().getWecWiseWecParameterVo("22-sep-2015", "22-sep-2015", wecIds, parameters));
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
}
